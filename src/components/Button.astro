---
import type { HTMLAttributes } from 'astro/types';
import { cva, cx, compose, focusRing } from '@/lib/cva';
import type { VariantProps } from 'cva';

export const _buttonVariants = cva({
  base: [
    'border border-transparent underline-offset-2',
    // disabled
    'disabled:no-underline disabled:pointer-events-none',
  ],
  variants: {
    variant: {
      primary: [
        'bg-blue-900 text-white',
        'hover:bg-blue-1000 hover:underline',
        'active:bg-blue-1100 active:underline',
        'disabled:bg-black/30',
      ],
      secondary: [
        'border-blue-900 bg-white text-blue-900',
        'hover:border-blue-1000 hover:bg-blue-200 hover:text-blue-1000 hover:underline',
        'active:border-blue-1100 active:bg-blue-300 active:text-blue-1200 active:underline',
        'disabled:border-solid-grey-400 disabled:bg-white disabled:text-solid-grey-400',
      ],
      tertiary: [
        'bg-transparent text-blue-900 underline',
        'hover:bg-blue-200 hover:text-blue-1000',
        'active:bg-blue-300 active:text-blue-1200',
        'disabled:bg-transparent disabled:text-solid-grey-400',
      ],
    },
    size: {
      lg: 'min-w-[8.5rem] rounded-8 p-4 text-oln-16B-1 leading-snug',
      md: 'min-w-24 rounded-8 px-4 py-3 text-oln-16B-1 leading-snug',
      sm: 'min-w-20 rounded-md px-3 py-1.5 text-oln-16B-1 leading-snug relative after:absolute after:-inset-x-[1px] after:-inset-y-[5px]',
      xs: 'min-w-18 rounded px-2 py-1.5 text-oln-14B-1 relative after:absolute after:-inset-x-[1px] after:-inset-y-[9px]',
    },
  },
  defaultVariants: {
    variant: 'primary',
    size: 'md',
  },
});

const buttonVariants = compose(focusRing, _buttonVariants);

export interface Props extends HTMLAttributes<'button'>, VariantProps<typeof buttonVariants> {}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const { variant = 'primary', size = 'md', class: className } = Astro.props;
---

<button class={cx(buttonVariants({ variant, size, class: className }))}>
  <slot />
</button>
